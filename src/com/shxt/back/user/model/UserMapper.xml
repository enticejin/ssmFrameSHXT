<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shxt.back.user.mapper.UserMapper" >
    <resultMap id="BaseResultMap" type="com.shxt.back.user.model.User" >
        <id column="user_id" property="user_id" jdbcType="INTEGER" />
        <result column="user_name" property="user_name" jdbcType="VARCHAR" />
        <result column="account" property="account" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="fk_role_id" property="fk_role_id" jdbcType="INTEGER" />
        <result column="user_img" property="user_img" jdbcType="VARCHAR" />
        <association property="role" select="com.shxt.back.role.mapper.RoleMapper.load" column="fk_role_id"></association>
    </resultMap>
    <sql id="user_columns" >
        user_id, user_name, account, password, status, fk_role_id, user_img
    </sql>
    <select id="load" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="user_columns" />
        from user
        where user_id = #{user_id,jdbcType=INTEGER}
    </select>
    <delete id="delete" parameterType="java.lang.Integer" >
        delete from user
        where user_id = #{user_id,jdbcType=INTEGER}
    </delete>
    <insert id="add" parameterType="com.shxt.back.user.model.User" >
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="user_id != null" >
                user_id,
            </if>
            <if test="user_name != null" >
                user_name,
            </if>
            <if test="account != null" >
                account,
            </if>
            <if test="password != null" >
                password,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="fk_role_id != null" >
                fk_role_id,
            </if>
            <if test="user_img != null" >
                user_img,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="user_id != null" >
                #{user_id,jdbcType=INTEGER},
            </if>
            <if test="user_name != null" >
                #{user_name,jdbcType=VARCHAR},
            </if>
            <if test="account != null" >
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                #{status,jdbcType=INTEGER},
            </if>
            <if test="fk_role_id != null" >
                #{fk_role_id,jdbcType=INTEGER},
            </if>
            <if test="user_img != null" >
                #{user_img,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="update" parameterType="com.shxt.back.user.model.User" >
        update user
        <set >
            <if test="user_name != null" >
                user_name = #{user_name,jdbcType=VARCHAR},
            </if>
            <if test="account != null" >
                account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="fk_role_id != null" >
                fk_role_id = #{fk_role_id,jdbcType=INTEGER},
            </if>
            <if test="user_img != null" >
                user_img = #{user_img,jdbcType=VARCHAR},
            </if>
        </set>
        where user_id = #{user_id,jdbcType=INTEGER}
    </update>
    <select id="userList" parameterType="map" resultMap="BaseResultMap">
    	select * from user 
    	<where>
    		<if test="user.user_name != null and user.user_name!=''">
    			and user_name like concat('%',#{user.user_name},'%')
    		</if>
    		<if test="user.account != null and user.account!=''">
    			and account like concat('%',#{user.account},'%')
    		</if>
    	</where>
    	limit #{beg},#{num}
    </select>
    <select id="count" parameterType="map" resultType="integer">
    	select count(*) from user 
    	<where>
    		<if test="user.user_name != null and user.user_name!=''">
    			and user_name like concat('%',#{user.user_name},'%')
    		</if>
    		<if test="user.account != null and user.account!=''">
    			and account like concat('%',#{user.account},'%')
    		</if>
    	</where>
    </select>
    <select id="login" parameterType="com.shxt.back.user.model.User" resultMap="BaseResultMap">
    	select * from user where account=#{account} and password=#{password}
    </select>
</mapper>